parameters:
    - name: tfVersion
      displayName: Terraform version
      type: string
      default: 0.13.5  # Specify the required Terraform version or keep the default value
    - name: serviceConnectionName
      displayName: Service Connection name in Azure DevOps
      type: string
      default:
    - name: tfRgName
      displayName: Terraform storage account resource group name
      type: string
      default:
    - name: tfStgName
      displayName: Terraform storage account name
      type: string
      default:
    - name: tfVarName
      displayName: Terraform stage variable file name
      type: string
      default: terraform.tfvars
    - name: kvName
      displayName: Terraform keyvault name
      type: string
      default:       
    - name: tenantId
      displayName: Azure tenantId
      type: string
      default: "45597f60-6e37-4be7-acfb-4c9e23b261ea"
    - name: subscriptionId
      displayName: Azure subscriptionId
      type: string
      default: 
    - name: clientId
      displayName: Azure service principal clientId
      type: string
      default: 


steps:
- download: current
  artifact: infra

- task: ms-devlabs.custom-terraform-tasks.custom-terraform-installer-task.TerraformInstaller@0
  displayName: Install Terraform version ${{ parameters.tfVersion }}
  inputs:
    terraformVersion: ${{ parameters.tfVersion }}
  enabled: true

- task: AzureCLI@2
  displayName: "Terraforming"
  inputs:
    azureSubscription:  ${{ parameters.serviceConnectionName }}
    workingDirectory: "$(Pipeline.Workspace)/infra/infra/terraform"
    scriptType: bash
    scriptLocation: inlineScript
    inlineScript: |
      az keyvault certificate download --vault-name ${{ parameters.kvName }} --name tfsp-pem-certificate --file cert.pem
      az keyvault secret download --vault-name ${{ parameters.kvName }} --name tfsp-pem-certificate --file cert.key                
      pfxpass="asdf.1234"
      openssl pkcs12 -export -out certificate.pfx -inkey cert.key -in cert.pem -passout pass:"$pfxpass"
      export ARM_CLIENT_CERTIFICATE_PATH="certificate.pfx"
      export ARM_CLIENT_CERTIFICATE_PASSWORD="$pfxpass"
      export ARM_TENANT_ID=${{ parameters.tenantId }}
      export ARM_SUBSCRIPTION_ID=${{ parameters.subscriptionId }}
      export ARM_CLIENT_ID=${{ parameters.clientId }}

      /opt/hostedtoolcache/terraform/0.13.5/x64/terraform init -input=false -reconfigure -var-file="${{ parameters.tfVarName }}" -backend-config="resource_group_name=${{ parameters.tfRgName }}" -backend-config="storage_account_name=${{ parameters.tfStgName }}"
      /opt/hostedtoolcache/terraform/0.13.5/x64/terraform plan -input=false -out=tfplan -var-file="${{ parameters.tfVarName }}"
      /opt/hostedtoolcache/terraform/0.13.5/x64/terraform apply -input=false -auto-approve tfplan
